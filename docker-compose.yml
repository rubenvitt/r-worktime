services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://worktime_user:${DB_PASSWORD:-worktime_dev_password}@postgres:5432/worktime
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:${APP_PORT:-3000}}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:${APP_PORT:-3000}}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    image: postgres:17-alpine
    container_name: r-worktime-db
    restart: unless-stopped
    ports:
      - "${DB_PORT:-6201}:5432"
    environment:
      POSTGRES_USER: worktime_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-worktime_dev_password}
      POSTGRES_DB: worktime
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U worktime_user -d worktime"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
